@model EditAvailableAbsenceViewModel
@inject UserManager<Employee> UserManager

@{
    ViewData["Title"] = "Edytuj urlop";

    var user = await UserManager.FindByIdAsync(Model.AvailableAbsence.IdEmployee);
}

<h1>@user.FirstName @user.LastName | @Model.AbsenceType.AbsenceTypeName</h1>
<hr />

<div class="row">
    <div class="col-md-4">
        <form asp-action="EditAvailableAbsence">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="AvailableAbsence.IdAvailableAbsence" />
            <input type="hidden" asp-for="AvailableAbsence.IdEmployee" class="form-control" value="@Model.AvailableAbsence.IdEmployee" />
            <input type="hidden" asp-for="AvailableAbsence.IdAbsenceType" class="form-control" value="@Model.AvailableAbsence.IdAbsenceType" />

            <div class="form-group">
                <label asp-for="AvailableAbsence.AvailableDays" class="control-label">Dostępne dni:</label>
                    <input type="number" asp-for="AvailableAbsence.AvailableDays" class="form-control" min="0"/>
                    <span asp-validation-for="AvailableAbsence.AvailableDays" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="AvailableAbsence.UsedAbsence" class="col-form-label">Wykorzystane dni:</label>
                    <input type="number" asp-for="AvailableAbsence.UsedAbsence" class="form-control" min="0"/>
                    <span asp-validation-for="AvailableAbsence.UsedAbsence" class="text-danger"></span>
            </div>

            <div class="form-group">
                <input type="submit" value="Zapisz" class="btn btn-primary" /> | <a asp-action="ListAvailableAbsence">Powrót do listy</a>
            </div>
        </form>
    </div>
</div>